import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input } from "@/styles/ui/input";
import { Button } from "@/styles/ui/button";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/styles/ui/select";
import { Search, Filter, SortAsc, SortDesc, Calendar, RotateCcw, } from "lucide-react";
import { motion } from "framer-motion";
const ShareSearchAndFilter = ({ searchTerm, onSearchChange, sortBy, onSortChange, sortOrder, onSortOrderToggle, filterStatus, onFilterStatusChange, onReset, totalShares, filteredShares, shareType }) => {
    const hasActiveFilters = searchTerm || filterStatus !== 'all' || sortBy !== 'date';
    return (_jsxs("div", { className: "bg-white/90 backdrop-blur-sm rounded-xl shadow-lg border border-gray-100 p-6 mb-6", children: [_jsxs("div", { className: "flex flex-col lg:flex-row gap-4 items-start lg:items-center justify-between", children: [_jsxs("div", { className: "flex flex-col sm:flex-row gap-3 flex-1 w-full lg:w-auto", children: [_jsxs("div", { className: "relative flex-1 min-w-[250px]", children: [_jsx(Search, { className: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" }), _jsx(Input, { placeholder: shareType === 'received' ? "Search by sender or file name..." : "Search by recipient or file name...", value: searchTerm, onChange: (e) => onSearchChange(e.target.value), className: "h-11 pl-10 pr-4 rounded-lg border-gray-200 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all" })] }), _jsxs("div", { className: "flex items-center gap-2 min-w-[180px]", children: [_jsx(Filter, { className: "w-4 h-4 text-gray-500" }), _jsxs(Select, { value: filterStatus, onValueChange: onFilterStatusChange, children: [_jsx(SelectTrigger, { className: "h-11 rounded-lg border-gray-200 focus:ring-2 focus:ring-emerald-500", children: _jsx(SelectValue, { placeholder: "Filter by status" }) }), _jsxs(SelectContent, { className: "bg-white border border-gray-200 shadow-lg rounded-lg", children: [_jsx(SelectItem, { value: "all", children: "All Shares" }), _jsx(SelectItem, { value: "active", children: "Active" }), _jsx(SelectItem, { value: "used", children: "Downloaded" }), _jsx(SelectItem, { value: "expired", children: "Expired" }), _jsx(SelectItem, { value: "deleted", children: "File Deleted" })] })] })] })] }), _jsxs("div", { className: "flex items-center gap-3 w-full lg:w-auto", children: [_jsxs("div", { className: "flex items-center gap-2 min-w-[160px]", children: [_jsx(Calendar, { className: "w-4 h-4 text-gray-500" }), _jsxs(Select, { value: sortBy, onValueChange: onSortChange, children: [_jsx(SelectTrigger, { className: "h-11 rounded-lg border-gray-200 focus:ring-2 focus:ring-emerald-500", children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { className: "bg-white border border-gray-200 shadow-lg rounded-lg", children: [_jsx(SelectItem, { value: "date", children: "Date Shared" }), _jsx(SelectItem, { value: "fileName", children: "File Name" }), _jsx(SelectItem, { value: shareType === 'received' ? 'sender' : 'recipient', children: shareType === 'received' ? 'Sender' : 'Recipient' }), _jsx(SelectItem, { value: "status", children: "Status" })] })] })] }), _jsx(motion.div, { whileHover: { scale: 1.05 }, whileTap: { scale: 0.95 }, children: _jsx(Button, { variant: "outline", size: "icon", onClick: onSortOrderToggle, className: "h-11 w-11 rounded-lg border-gray-200 hover:bg-emerald-50 hover:border-emerald-300 transition-all", title: `Sort ${sortOrder === 'asc' ? 'Descending' : 'Ascending'}`, children: sortOrder === 'asc' ?
                                        _jsx(SortAsc, { className: "w-4 h-4" }) :
                                        _jsx(SortDesc, { className: "w-4 h-4" }) }) }), hasActiveFilters && (_jsx(motion.div, { initial: { opacity: 0, scale: 0.8 }, animate: { opacity: 1, scale: 1 }, whileHover: { scale: 1.05 }, whileTap: { scale: 0.95 }, children: _jsxs(Button, { variant: "outline", onClick: onReset, className: "h-11 px-4 rounded-lg border-gray-200 hover:bg-orange-50 hover:border-orange-300 transition-all text-gray-600 hover:text-orange-600", children: [_jsx(RotateCcw, { className: "w-4 h-4 mr-2" }), "Reset"] }) }))] })] }), (searchTerm || filterStatus !== 'all') && (_jsx(motion.div, { initial: { opacity: 0, y: -10 }, animate: { opacity: 1, y: 0 }, className: "mt-4 pt-4 border-t border-gray-100", children: _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsxs("span", { className: "text-gray-600", children: ["Showing ", _jsx("span", { className: "font-semibold text-emerald-600", children: filteredShares }), " of", ' ', _jsx("span", { className: "font-semibold", children: totalShares }), " shares"] }), searchTerm && (_jsxs("span", { className: "text-gray-500", children: ["Search: \"", _jsx("span", { className: "text-emerald-600 font-medium", children: searchTerm }), "\""] }))] }) }))] }));
};
export default ShareSearchAndFilter;
